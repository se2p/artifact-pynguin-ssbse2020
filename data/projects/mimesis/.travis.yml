language: python

sudo: false

matrix:
    include:
        - os: linux
          sudo: required
          python: "3.6"
          dist: trusty
          name: "Python 3.6 on Linux"

        - os: linux
          sudo: required
          python: "3.7"
          dist: xenial
          name: "Python 3.7 on Linux"

        - os: linux
          sudo: required
          python: "3.8"
          dist: xenial
          name: "Python 3.8 on Linux"

        - os: osx
          language: generic
          env: PYTHON=3.6.8
          name: "Python 3.6 on macOS"

        - os: osx
          language: generic
          env: PYTHON=3.7.5
          name: "Python 3.7 on macOS"

        - os: osx
          language: generic
          env: PYTHON=3.8.0
          name: "Python 3.8 on macOS"

        - os: windows
          language: shell
          before_install:
            - choco install python3 --version 3.6.8
            - python -m pip install --upgrade pip
          env: PATH=/c/Python36:/c/Python36/Scripts:$PATH
          name: "Python 3.6 on Windows 10"

        - os: windows
          language: shell
          before_install:
            - choco install python3 --version 3.7.5
            - python -m pip install --upgrade pip
          env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
          name: "Python 3.7 on Windows 10"

        - os: windows
          language: shell
          before_install:
            - choco install python3 --version 3.8.0
            - python -m pip install --upgrade pip
          env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
          name: "Python 3.8 on Windows 10"



before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    brew install pyenv
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    python --version
  fi


install:
  - pip install pipenv
  - pipenv install --dev --ignore-pipfile

script:
  - pipenv run py.test --cov=mimesis
  - pipenv run mypy mimesis/ tests/
  - pipenv run pyroma -d .

after_success:
  codecov

before_deploy:
  - python setup.py minify
  - pipenv run check-manifest
  - pipenv run python setup.py check --restructuredtext --strict

deploy:
  provider: pypi
  user: lk-geimfari
  password: $SECURE_PASS
  distributions: sdist bdist_wheel
  on:
    branch: master
    tags: true
    condition: $TRAVIS_PYTHON_VERSION = "3.6" && $TRAVIS_OS_NAME == "linux"

notifications:
  email:
    on_success: never
    on_failure: change
