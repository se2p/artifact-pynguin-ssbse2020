[tool.poetry]
name = "pynguin"
version = "0.1.0"
description = "An automated Python unit test generation tool"
authors = ["Stephan Lukasczyk <stephan@lukasczyk.me>"]
license = "LGPL-3.0+"
readme = "README.md"
repository = "https://github.com/pytesting/pynguin"
keywords = [
    "unit test",
    "generation",
    "automated",
    "random testing",
    "search-based test generation",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Topic :: Education :: Testing",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.8"
astor = "^0.8.1"
simple-parsing = "^0"
bytecode = "^0"
monkeytype = "^19.11.2"
typing_inspect = "^0.5.0"
jellyfish = "^0.7.2"
networkx = {extras = ["pydot"], version = "^2.4"}

[tool.poetry.dev-dependencies]
coverage = "^5.0"
pytest = "^5.4"
black = {version = "^19.10b0", allow-prereleases = true}
pytest-cov = "^2.8"
pylint = "^2.4"
pytest-sugar = "^0.9.2"
pytest-picked = "^0.4.1"
pytest-xdist = "^1.31"
hypothesis = "^5.7"
pytest-mock = "^2.0.0"
mypy = "^0.770"
isort = {extras = ["pyproject"], version = "^4.3.21"}
pre-commit = "^2.4.0"
darglint = "^1.3.0"
pyupgrade = "^2.4.1"
bandit = "^1.6.2"
safety = "^1.9.0"

[tool.poetry.scripts]
pynguin = "pynguin.cli:main"

[tool.black]
line-length = 88
target_version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs          # exclude a few common directories in the
    | \.git           # root of the project
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | _build
    | build
    | dist
    | pynguin.egg-info
  )/
)
'''

[tool.coverage.run]
branch = true
source = ["pynguin", "tests"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "cov_html"

[tool.isort]
line_length=88
multi_line_output=3
include_trailing_comma=true
indent='    '

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
